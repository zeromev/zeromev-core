@page "/address"
@inject HttpClient Http
@inject ZMCache Cache
@inject NavigationManager NavigationManager

@if (addrTxs == null)
{
    <p><em>loading account...</em></p>
}
else
{
    <table class="table table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">tx hash</th>
                <th scope="col">nonce</th>
                <th scope="col">block number</th>
                <th scope="col">time</th>
                <th scope="col">from</th>
                <th scope="col">to</th>
                <th scope="col">value (Eth)</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="@addrTxs" Context="tx">
                <tr>
                    <td><a href="block?num=@tx.BlockNumber&txi=@tx.TransactionIndex">@Num.ShortenHex(tx.Hash,16)</a></td>
                    <td>@tx.Nonce</td>
                    <td>@tx.BlockNumber</td>
                    <td>@(DateTimeOffset.FromUnixTimeSeconds(long.Parse(tx.TimeStamp)).ToUniversalTime().DateTime)</td>
                    <td>@Num.ShortenHex(tx.From,16)</td>
                    <td>@Num.ShortenHex(tx.To,16)</td>
                    <td>@Num.EthToGwei(tx.Value)</td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "hash")]
    public string? Addr { get; set; }

    List<TxListResult>? addrTxs;

    protected override async Task OnParametersSetAsync()
    {
        if (Addr != null)
        {
            var addr = await Cache.AccountCache.Get(Http, Addr);
            if (addr != null && addr.Message == "OK")
            {
                addrTxs = addr.Result;
                return;
            }
            NavigationManager.NavigateTo("searchfailed");
        }
    }
}