<div class="row mb-2">
    <div class="col-md-4 mb-2">
        <div class="card text-dark bg-light h-100">
            <abbr title="@("block number "+ZV.BlockNumber+"\nblock time "+(ZV.HasStats ? ZV.BlockTimeMin.ToString(Time.FormatShort) : "-")+"\ntx count "+ZV.TxCount)">
            <div class="card-body">
                <h5 class="card-title"><img src="/block.svg" width=24 height=24> block</h5>
                <p class="card-text">
                    <b>@(ZV.BlockNumber)</b>
                <a href='/block?num=@(ZV.BlockNumber-1)' title='previous block'><img src="left.svg" width="16" height="16" /></a>
                <a href='/block?num=@(ZV.BlockNumber+1)' title='next block'><img src="right.svg" width="16" height="16" /></a>
                contains
                    @if (ZV.MEVSummaries[(int)MEVFilter.Toxic].AmountUsd==0 && ZV.MEVSummaries[(int)MEVFilter.Other].AmountUsd==0)
                    {
                        <span> no idenitified user losses from mev</span>
                    }
                    else if (ZV.MEVSummaries[(int)MEVFilter.Toxic].AmountUsd!=0)
                    {
                        <span class="fw-bold text-danger">$@(ZV.MEVSummaries[(int)MEVFilter.Toxic].AmountUsd.ToString("0.00"))</span><span> in toxic user losses</span>
                        if (ZV.MEVSummaries[(int)MEVFilter.Other].AmountUsd!=0)
                        {
                            <span> and </span><span class="fw-bold">$@((ZV.MEVSummaries[(int)MEVFilter.Other].AmountUsd+ZV.MEVSummaries[(int)MEVFilter.Toxic].AmountUsd).ToString("0.00"))</span><span> in total</span>
                        }
                    }
                    else if (ZV.MEVSummaries[(int)MEVFilter.Other].AmountUsd!=0)
                    {
                        <span class="fw-bold">$@((ZV.MEVSummaries[(int)MEVFilter.Other].AmountUsd+ZV.MEVSummaries[(int)MEVFilter.Toxic].AmountUsd).ToString("0.00"))</span><span> in user losses</span>
                    }
                    over @ZV.TxCount transactions.
                </p>
            </div>
            </abbr>
        </div>
    </div>
    <div class="col-md-4 mb-2">
        <div class="card text-dark bg-light h-100">
            <abbr title="@(ZV.HasStats ? "block arrival times\n"+ZV.BlockTimeDetail+"\n" : null)see arrival time tooltips for tx arrival times.">
            <div class="card-body">
                <h5 class="card-title"><img src="/time.svg" width=24 height=24> delay</h5>
                <p class="card-text">
                    transactions were delayed by @((MarkupString)(ZV.HasStats && ZV.InclusionDelayMeanShort!=null ? "<b>"+ZV.InclusionDelayMeanShort+" avg</b> and "+ZV.InclusionDelayMaxShort+" max" : "an unknown amount")) before being included at @(ZV.HasStats ? ZV.BlockTimeMin.ToString(Time.FormatShort) : "-").
                </p>
            </div>
            </abbr>
        </div>
    </div>
    <div class="col-md-4 mb-2">
        <div class="card text-dark bg-light h-100">
            <abbr title="@ZV.PoPDetail">
            <div class="card-body">
                <h5 class="card-title"><img src="/globe.svg" width=24 height=24> network</h5>
                <p class="card-text">
                p2p latency was
                @if (ZV.HasStats && ZV.ValidPopCount > 1)
                {
                    <span>measured at <b>@Math.Round(ZV.BlockTimeRangeStdev.TotalMilliseconds, 0) ms</b> by @ZV.ValidPopCount nodes.</span>
                }
                else
                {
                    <span>not measured for this block.</span>
                }
                </p>
            </div>
            </abbr>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public ZMView? ZV { get; set; }
}
